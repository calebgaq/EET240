
LCDC++code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000224  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  00000224  00000298  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b78  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000063c  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000420  00000000  00000000  0000152c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  0000194c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ea  00000000  00000000  000019f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004d6  00000000  00000000  00001dda  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e2       	ldi	r30, 0x24	; 36
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 38       	cpi	r26, 0x82	; 130
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 e7 00 	call	0x1ce	; 0x1ce <main>
  7a:	0c 94 10 01 	jmp	0x220	; 0x220 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z11LCD_Commandh>:

void LCD_Clear()
{
	LCD_Command (0x01);		/* Clear display */
	_delay_ms(2);
	LCD_Command (0x80);		/* Cursor at home position */
  82:	98 b3       	in	r25, 0x18	; 24
  84:	9f 70       	andi	r25, 0x0F	; 15
  86:	28 2f       	mov	r18, r24
  88:	20 7f       	andi	r18, 0xF0	; 240
  8a:	92 2b       	or	r25, r18
  8c:	98 bb       	out	0x18, r25	; 24
  8e:	98 b3       	in	r25, 0x18	; 24
  90:	9e 7f       	andi	r25, 0xFE	; 254
  92:	98 bb       	out	0x18, r25	; 24
  94:	98 b3       	in	r25, 0x18	; 24
  96:	92 60       	ori	r25, 0x02	; 2
  98:	98 bb       	out	0x18, r25	; 24
  9a:	00 00       	nop
  9c:	98 b3       	in	r25, 0x18	; 24
  9e:	9d 7f       	andi	r25, 0xFD	; 253
  a0:	98 bb       	out	0x18, r25	; 24
  a2:	32 e4       	ldi	r19, 0x42	; 66
  a4:	3a 95       	dec	r19
  a6:	f1 f7       	brne	.-4      	; 0xa4 <_Z11LCD_Commandh+0x22>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <_Z11LCD_Commandh+0x28>
  aa:	28 b3       	in	r18, 0x18	; 24
  ac:	30 e1       	ldi	r19, 0x10	; 16
  ae:	83 9f       	mul	r24, r19
  b0:	c0 01       	movw	r24, r0
  b2:	11 24       	eor	r1, r1
  b4:	92 2f       	mov	r25, r18
  b6:	9f 70       	andi	r25, 0x0F	; 15
  b8:	89 2b       	or	r24, r25
  ba:	88 bb       	out	0x18, r24	; 24
  bc:	88 b3       	in	r24, 0x18	; 24
  be:	82 60       	ori	r24, 0x02	; 2
  c0:	88 bb       	out	0x18, r24	; 24
  c2:	00 00       	nop
  c4:	88 b3       	in	r24, 0x18	; 24
  c6:	8d 7f       	andi	r24, 0xFD	; 253
  c8:	88 bb       	out	0x18, r24	; 24
  ca:	83 ef       	ldi	r24, 0xF3	; 243
  cc:	91 e0       	ldi	r25, 0x01	; 1
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <_Z11LCD_Commandh+0x4c>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <_Z11LCD_Commandh+0x52>
  d4:	00 00       	nop
  d6:	08 95       	ret

000000d8 <_Z8LCD_Charh>:
  d8:	98 b3       	in	r25, 0x18	; 24
  da:	9f 70       	andi	r25, 0x0F	; 15
  dc:	28 2f       	mov	r18, r24
  de:	20 7f       	andi	r18, 0xF0	; 240
  e0:	92 2b       	or	r25, r18
  e2:	98 bb       	out	0x18, r25	; 24
  e4:	98 b3       	in	r25, 0x18	; 24
  e6:	91 60       	ori	r25, 0x01	; 1
  e8:	98 bb       	out	0x18, r25	; 24
  ea:	98 b3       	in	r25, 0x18	; 24
  ec:	92 60       	ori	r25, 0x02	; 2
  ee:	98 bb       	out	0x18, r25	; 24
  f0:	00 00       	nop
  f2:	98 b3       	in	r25, 0x18	; 24
  f4:	9d 7f       	andi	r25, 0xFD	; 253
  f6:	98 bb       	out	0x18, r25	; 24
  f8:	32 e4       	ldi	r19, 0x42	; 66
  fa:	3a 95       	dec	r19
  fc:	f1 f7       	brne	.-4      	; 0xfa <_Z8LCD_Charh+0x22>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <_Z8LCD_Charh+0x28>
 100:	28 b3       	in	r18, 0x18	; 24
 102:	30 e1       	ldi	r19, 0x10	; 16
 104:	83 9f       	mul	r24, r19
 106:	c0 01       	movw	r24, r0
 108:	11 24       	eor	r1, r1
 10a:	92 2f       	mov	r25, r18
 10c:	9f 70       	andi	r25, 0x0F	; 15
 10e:	89 2b       	or	r24, r25
 110:	88 bb       	out	0x18, r24	; 24
 112:	88 b3       	in	r24, 0x18	; 24
 114:	82 60       	ori	r24, 0x02	; 2
 116:	88 bb       	out	0x18, r24	; 24
 118:	00 00       	nop
 11a:	88 b3       	in	r24, 0x18	; 24
 11c:	8d 7f       	andi	r24, 0xFD	; 253
 11e:	88 bb       	out	0x18, r24	; 24
 120:	83 ef       	ldi	r24, 0xF3	; 243
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <_Z8LCD_Charh+0x4c>
 128:	00 c0       	rjmp	.+0      	; 0x12a <_Z8LCD_Charh+0x52>
 12a:	00 00       	nop
 12c:	08 95       	ret

0000012e <_Z8LCD_Initv>:
 12e:	8f ef       	ldi	r24, 0xFF	; 255
 130:	87 bb       	out	0x17, r24	; 23
 132:	87 e8       	ldi	r24, 0x87	; 135
 134:	93 e1       	ldi	r25, 0x13	; 19
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <_Z8LCD_Initv+0x8>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <_Z8LCD_Initv+0xe>
 13c:	00 00       	nop
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 144:	88 e2       	ldi	r24, 0x28	; 40
 146:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 14a:	8c e0       	ldi	r24, 0x0C	; 12
 14c:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 150:	86 e0       	ldi	r24, 0x06	; 6
 152:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 15c:	83 ef       	ldi	r24, 0xF3	; 243
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <_Z8LCD_Initv+0x32>
 164:	00 c0       	rjmp	.+0      	; 0x166 <_Z8LCD_Initv+0x38>
 166:	00 00       	nop
 168:	08 95       	ret

0000016a <_Z10LCD_StringPc>:
 16a:	0f 93       	push	r16
 16c:	1f 93       	push	r17
 16e:	cf 93       	push	r28
 170:	df 93       	push	r29
 172:	8c 01       	movw	r16, r24
 174:	c0 e0       	ldi	r28, 0x00	; 0
 176:	d0 e0       	ldi	r29, 0x00	; 0
 178:	f8 01       	movw	r30, r16
 17a:	ec 0f       	add	r30, r28
 17c:	fd 1f       	adc	r31, r29
 17e:	80 81       	ld	r24, Z
 180:	88 23       	and	r24, r24
 182:	21 f0       	breq	.+8      	; 0x18c <_Z10LCD_StringPc+0x22>
 184:	0e 94 6c 00 	call	0xd8	; 0xd8 <_Z8LCD_Charh>
 188:	21 96       	adiw	r28, 0x01	; 1
 18a:	f6 cf       	rjmp	.-20     	; 0x178 <_Z10LCD_StringPc+0xe>
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	1f 91       	pop	r17
 192:	0f 91       	pop	r16
 194:	08 95       	ret

00000196 <_Z13LCD_String_xyccPc>:
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	ea 01       	movw	r28, r20
 19c:	81 11       	cpse	r24, r1
 19e:	08 c0       	rjmp	.+16     	; 0x1b0 <_Z13LCD_String_xyccPc+0x1a>
 1a0:	60 31       	cpi	r22, 0x10	; 16
 1a2:	30 f4       	brcc	.+12     	; 0x1b0 <_Z13LCD_String_xyccPc+0x1a>
 1a4:	86 2f       	mov	r24, r22
 1a6:	8f 70       	andi	r24, 0x0F	; 15
 1a8:	80 68       	ori	r24, 0x80	; 128
 1aa:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 1ae:	09 c0       	rjmp	.+18     	; 0x1c2 <_Z13LCD_String_xyccPc+0x2c>
 1b0:	81 30       	cpi	r24, 0x01	; 1
 1b2:	39 f4       	brne	.+14     	; 0x1c2 <_Z13LCD_String_xyccPc+0x2c>
 1b4:	60 31       	cpi	r22, 0x10	; 16
 1b6:	28 f4       	brcc	.+10     	; 0x1c2 <_Z13LCD_String_xyccPc+0x2c>
 1b8:	86 2f       	mov	r24, r22
 1ba:	8f 70       	andi	r24, 0x0F	; 15
 1bc:	80 6c       	ori	r24, 0xC0	; 192
 1be:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
 1c2:	ce 01       	movw	r24, r28
 1c4:	0e 94 b5 00 	call	0x16a	; 0x16a <_Z10LCD_StringPc>
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	08 95       	ret

000001ce <main>:
}

int main()
{

	LCD_Init();			/* Initialization of LCD*/
 1ce:	0e 94 97 00 	call	0x12e	; 0x12e <_Z8LCD_Initv>

	
	LCD_String("ElectronicWINGS");	/* Write string on 1st line of LCD*/
 1d2:	80 e6       	ldi	r24, 0x60	; 96
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 b5 00 	call	0x16a	; 0x16a <_Z10LCD_StringPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1da:	2f e9       	ldi	r18, 0x9F	; 159
 1dc:	86 e8       	ldi	r24, 0x86	; 134
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0x12>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0x1c>
 1ea:	00 00       	nop
	_delay_ms(500);
	
	LCD_Command(0xC0);		/* Go to 2nd line*/
 1ec:	80 ec       	ldi	r24, 0xC0	; 192
 1ee:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
	LCD_String("Hello World");	/* Write string on 2nd line*/
 1f2:	80 e7       	ldi	r24, 0x70	; 112
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 b5 00 	call	0x16a	; 0x16a <_Z10LCD_StringPc>
 1fa:	2f e9       	ldi	r18, 0x9F	; 159
 1fc:	86 e8       	ldi	r24, 0x86	; 134
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	21 50       	subi	r18, 0x01	; 1
 202:	80 40       	sbci	r24, 0x00	; 0
 204:	90 40       	sbci	r25, 0x00	; 0
 206:	e1 f7       	brne	.-8      	; 0x200 <main+0x32>
 208:	00 c0       	rjmp	.+0      	; 0x20a <main+0x3c>
 20a:	00 00       	nop
	_delay_ms(500);
	
	LCD_Command(0x0f);
 20c:	8f e0       	ldi	r24, 0x0F	; 15
 20e:	0e 94 41 00 	call	0x82	; 0x82 <_Z11LCD_Commandh>
	LCD_String_xy(0x00, 0x0a, "WINS!"); //Writes the string on line 1 column 10 (0x0A)
 212:	4c e7       	ldi	r20, 0x7C	; 124
 214:	50 e0       	ldi	r21, 0x00	; 0
 216:	6a e0       	ldi	r22, 0x0A	; 10
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	0e 94 cb 00 	call	0x196	; 0x196 <_Z13LCD_String_xyccPc>
 21e:	ff cf       	rjmp	.-2      	; 0x21e <main+0x50>

00000220 <_exit>:
 220:	f8 94       	cli

00000222 <__stop_program>:
 222:	ff cf       	rjmp	.-2      	; 0x222 <__stop_program>
